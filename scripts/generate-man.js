#!/usr/bin/env node

import fs from 'fs/promises';
import path from 'path';
import { fileURLToPath } from 'url';

const __dirname = path.dirname(fileURLToPath(import.meta.url));
const packagePath = path.join(__dirname, '..', 'package.json');
const pkg = JSON.parse(await fs.readFile(packagePath, 'utf8'));

const manPage = `.\\" Generated by generate-man.js
.TH WSL-SYNC 1 "${new Date().toLocaleDateString()}" "v${pkg.version}" "WSL Sync CLI Manual"
.SH NAME
wsl-sync \\- Terminal-based file synchronization tool for WSL environments

.SH SYNOPSIS
.B wsl-sync
[\\fISOURCE\\fR] [\\fIDESTINATION\\fR] [\\fIOPTIONS\\fR]
.br
.B wsl-sync
\\fB\\-\\-help\\fR | \\fB\\-\\-version\\fR
.br
.B wsl-sync
\\fB\\-\\-profile\\fR \\fINAME\\fR [\\fIOPTIONS\\fR]

.SH DESCRIPTION
.B wsl-sync
is a powerful terminal-based file synchronization tool designed specifically for 
WSL (Windows Subsystem for Linux) environments. It provides both an interactive 
terminal UI and command-line interface for seamless file synchronization between 
Windows and WSL file systems.

.SH OPTIONS
.SS Basic Options
.TP
.BR \\-h ", " \\-\\-help
Display help information and exit.
.TP
.BR \\-v ", " \\-\\-version
Display version information and exit.
.TP
.BR \\-d ", " \\-\\-dry\\-run
Preview changes without actually syncing files.
.TP
.B \\-\\-no\\-interactive
Run in non-interactive mode (command-line only).

.SS Sync Options
.TP
.B \\-\\-one\\-way
Force one-way synchronization from source to destination.
.TP
.B \\-\\-two\\-way
Force two-way synchronization (default behavior).
.TP
.B \\-\\-no\\-delete
Don't delete orphaned files in the destination.
.TP
.BI \\-\\-filter " PRESET"
Apply predefined filter preset. Available presets:
.RS
.IP \\(bu 2
\\fBdocuments\\fR \\- Document files (pdf, doc, txt, etc.)
.IP \\(bu 2
\\fBimages\\fR \\- Image files (jpg, png, gif, etc.)
.IP \\(bu 2
\\fBcode\\fR \\- Source code files
.IP \\(bu 2
\\fBmedia\\fR \\- Audio/video files
.IP \\(bu 2
\\fBarchives\\fR \\- Compressed files (zip, tar, etc.)
.RE
.TP
.BI \\-\\-ignore " PATTERN"
Add ignore pattern (can be used multiple times).

.SS Profile Management
.TP
.BI \\-\\-profile " NAME"
Use saved profile for synchronization.
.TP
.BI \\-\\-create\\-profile " NAME"
Create a new profile with current settings.
.TP
.B \\-\\-list\\-profiles
List all saved profiles.

.SS Performance Options
.TP
.BI \\-\\-workers " N"
Number of worker threads to use (default: 4).
.TP
.B \\-\\-quiet
Minimal output, suppress progress information.
.TP
.B \\-\\-verbose
Detailed output with file-by-file progress.
.TP
.B \\-\\-json
Output results in JSON format for scripting.

.SS Terminal Options
.TP
.B \\-\\-no\\-color
Disable colored output.
.TP
.B \\-\\-ascii
Use ASCII-only characters (no Unicode).

.SS Error Handling
.TP
.BI \\-\\-max\\-errors " N"
Stop after N errors (default: 50).
.TP
.B \\-\\-skip\\-errors
Continue synchronization despite errors.
.TP
.BI \\-\\-error\\-log " PATH"
Custom error log file location.

.SS Configuration
.TP
.BI \\-\\-config " FILE"
Load configuration from specified JSON file.
.TP
.BI \\-\\-source " PATH"
Source directory path (used with \\-\\-create\\-profile).
.TP
.BI \\-\\-destination " PATH"
Destination directory path (used with \\-\\-create\\-profile).

.SH KEYBOARD SHORTCUTS
When running in interactive mode, the following keyboard shortcuts are available:

.SS Global Shortcuts
.TP
.BR F1 ", " ?
Show context-sensitive help.
.TP
.B Tab
Switch between views/panels.
.TP
.B Q
Quit application.
.TP
.B Ctrl+C
Force quit (press twice).

.SS Navigation
.TP
.BR 1 ", " 2 ", " 3
Quick switch to Sync/Profiles/Settings view.
.TP
.BR "Arrow Keys"
Navigate through lists and options.
.TP
.B Enter
Select or confirm current option.
.TP
.B Esc
Cancel or go back.

.SS Sync View
.TP
.B Ctrl+S
Start synchronization.
.TP
.B Ctrl+P
Pause/Resume synchronization.
.TP
.B B
Browse folders.
.TP
.B F
Open filter manager.
.TP
.B I
Edit .syncignore file.
.TP
.B P
Preview changes.

.SH CONFIGURATION FILES
.SS wsl-sync.config.json
Main configuration file for default settings. Example:

.nf
{
  "sourcePath": "/home/user/projects",
  "destinationPath": "/mnt/c/Users/User/Projects",
  "direction": "two-way",
  "deleteOrphaned": true,
  "workerThreads": 8,
  "filter": "code"
}
.fi

.SS .syncignore
Pattern file for excluding files from synchronization. Uses gitignore syntax:

.nf
# Dependencies
node_modules/
vendor/
*.pyc

# Build artifacts
dist/
build/
*.o

# Temporary files
*.tmp
*.swp
.DS_Store
.fi

.SH ENVIRONMENT VARIABLES
.TP
.B WSL_SYNC_CONFIG
Path to default configuration file.
.TP
.B WSL_SYNC_ASCII
Set to 1 to force ASCII-only mode.
.TP
.B WSL_SYNC_NO_COLOR
Set to 1 to disable colored output.
.TP
.B NO_COLOR
Standard no-color environment variable.

.SH EXIT STATUS
.TP
.B 0
Successful synchronization.
.TP
.B 1
General error or synchronization failure.
.TP
.B 2
Invalid command line arguments.
.TP
.B 3
Configuration error.
.TP
.B 130
Interrupted by user (Ctrl+C).

.SH EXAMPLES
.SS Basic Usage
Synchronize two directories interactively:
.PP
.nf
wsl-sync /home/user/documents /mnt/c/Users/User/Documents
.fi

.SS Dry Run
Preview changes without syncing:
.PP
.nf
wsl-sync ~/projects /mnt/c/Projects --dry-run
.fi

.SS One-Way Sync
Copy files from source to destination only:
.PP
.nf
wsl-sync ~/work /mnt/c/Work --one-way --no-delete
.fi

.SS Using Profiles
Create and use a profile:
.PP
.nf
# Create profile
wsl-sync --create-profile work \\\\
  --source ~/work \\\\
  --destination /mnt/c/Work \\\\
  --filter documents

# Use profile
wsl-sync --profile work
.fi

.SS Automation
Run in non-interactive mode for scripts:
.PP
.nf
wsl-sync --profile backup --quiet --no-interactive
.fi

.SS Filtering
Sync only code files:
.PP
.nf
wsl-sync ~/dev /mnt/c/Dev --filter code --ignore "*.log"
.fi

.SH FILES
.TP
.I ~/.wsl-sync/config.json
User configuration file.
.TP
.I ~/.wsl-sync/profiles.json
Saved synchronization profiles.
.TP
.I ~/.wsl-sync/logs/
Error and activity logs.
.TP
.I .syncignore
Per-directory ignore patterns.

.SH BUGS
Report bugs at: https://github.com/frankbria/wsl-sync-cli/issues

.SH SEE ALSO
.BR rsync (1),
.BR cp (1),
.BR git (1)

.SH AUTHOR
Frank Bria <frank@wsl-sync.dev>

.SH COPYRIGHT
Copyright Â© 2024 Frank Bria. License MIT: <https://opensource.org/licenses/MIT>
.br
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
`;

// Ensure man directory exists
const manDir = path.join(__dirname, '..', 'man', 'man1');
await fs.mkdir(manDir, { recursive: true });

// Write man page
const manPath = path.join(manDir, 'wsl-sync.1');
await fs.writeFile(manPath, manPage);

console.log(`Man page generated at: ${manPath}`);
console.log('To view: man ./man/man1/wsl-sync.1');
console.log('To install: sudo cp man/man1/wsl-sync.1 /usr/local/share/man/man1/');